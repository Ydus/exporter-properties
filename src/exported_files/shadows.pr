import SwiftUI

// Generated by Supernova - do not modify manually
extension View {
    {[ for group in @ds.tokenGroupsOfType("Shadow") ]}
    {[ const tokens = @ds.tokensByGroupId(group.id) /]}
    {[ if @boolean.not(@boolean.and(@compare.empty(tokens), @compare.empty(group.subgroups))) ]}
    {[ if @boolean.not(group.isRoot) ]}

    // {{ group.name }}
    {[/]}
    {[ for token in tokens ]}

    {[ if @boolean.not(@compare.empty(token.description)) ]}
    {{ @js.createDocumentationComment(token.description, "    ") }}
    {[/]}
    func shadow{[ inject "token_func_name" context self /]}() -> some View {
        return self.shadow({[ inject "color" context token.value.color /]}, radius: {{ token.value.radius.measure }}, x: {{ token.value.x.measure }}, y: {{ token.value.y.measure }}) 
    }
    {[/]}
    {[/]}
    {[/]}
}